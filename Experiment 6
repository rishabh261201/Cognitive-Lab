import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score,confusion_matrix,f1_score,precision_score

data=pd.read_csv("iphone_purchase_records.csv")

data.head()

from sklearn.preprocessing import LabelEncoder
no = LabelEncoder()
data["Gender"] = no.fit_transform(data['Gender'])
print(data)

x=data.drop(columns=["Purchase Iphone"])
y=data["Purchase Iphone"]

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2)

from sklearn.tree import DecisionTreeClassifier
classifier = DecisionTreeClassifier(criterion='entropy')
classifier.fit(x_train,y_train)

y_pred_dt=classifier.predict(x_test)

from sklearn.metrics import confusion_matrix
cf=confusion_matrix(y_test,y_pred_dt)
print(cf)

ac=accuracy_score(y_test,y_pred_dt)
print("accuracy=",ac)
f1=f1_score(y_test,y_pred_dt)
print("F1 score =",f1)
precision=precision_score(y_test,y_pred_dt)
print("Precision=",precision)

from sklearn.ensemble import RandomForestClassifier
classifier=RandomForestClassifier(n_estimators=10,criterion="entropy")
classifier.fit(x_train,y_train)

y_pred_rf=classifier.predict(x_test)

from sklearn.metrics import confusion_matrix
cf=confusion_matrix(y_test,y_pred_rf)
print(cf)

ac=accuracy_score(y_test,y_pred_rf)
print("accuracy=",ac)
f1=f1_score(y_test,y_pred_rf)
print("F1 score =",f1)
precision=precision_score(y_test,y_pred_rf)
print("Precision=",precision)

Comparison_table=[["Accuracy",0.8375,0.825],["F1 score",0.763,0.766],["Precision",0.777,0.718]]
print(Comparison_table)
